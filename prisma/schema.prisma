// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// schema.prisma

model user {
  id                String    @id @default(uuid())
  email             String    @unique
  password          String
  username          String
  user_type         String?
  image             String?
  first_name        String?
  last_name         String?
  timezone_id       String? //***
  is_active         Boolean   @default(true)
  is_term_con       Boolean?
  phone_number      String?
  country_code      String?
  fcm_token         String? //****
  access_token      String? //****
  refresh_token     String? //****
  client_key        String? //****
  secret_key        String? //****
  is_email_verified Boolean   @default(false)
  created_at        DateTime  @default(now())
  deleted_at        DateTime?
  updated_at        DateTime  @updatedAt
  is_deleted        Boolean   @default(false)
  Review            Review[]
}

model Product {
  id           String     @id @default(uuid())
  name         String
  description  String
  price        Int
  quantity     Int
  category     String
  image_url    String
  created_at   DateTime   @default(now())
  updated_at   DateTime   @updatedAt
  stock_status Boolean    @default(true)
  weight       Int?
  rating       Int?
  add_to_cart  Boolean    @default(false)
  wish_list    Boolean    @default(false)
  Discount     Discount[]
  Review       Review[]
}

model Discount {
  id            String   @id @unique @default(uuid())
  discountPrice String
  discountPerc  String
  rule          String
  expireDay     Int
  condition     String
  expireDate    DateTime
  product       Product  @relation(fields: [product_id], references: [id])
  product_id    String
  couponCode    String? /// working process
}

model Review {
  id         String   @id @default(uuid())
  product    Product  @relation(fields: [productId], references: [id])
  productId String
  comment    String
  rating     String
  user       user     @relation(fields: [userId], references: [id])
  userId    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  images     String[]
}
